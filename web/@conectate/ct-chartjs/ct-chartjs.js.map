{"version":3,"file":"ct-chartjs.js","sourceRoot":"","sources":["src/ct-chartjs.ts"],"names":[],"mappings":"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","sourcesContent":["import { Chart } from 'chart.js';\nimport { html, CtLit, property } from '@conectate/ct-lit';\nimport { sleep } from '@conectate/ct-helpers';\nlet pie = {\n\ttype: 'pie' as Chart.ChartType,\n\tdata: {\n\t\tlabels: ['January', 'February', 'March'],\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tdata: [10, 20, 30],\n\t\t\t\tbackgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)'],\n\t\t\t\tborderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)']\n\t\t\t}\n\t\t]\n\t},\n\toptions: {}\n};\n\nlet line = {\n\ttype: 'line',\n\tdata: {\n\t\tlabels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: 'My First dataset',\n\t\t\t\tbackgroundColor: 'rgba(255, 99, 132,0.5)',\n\t\t\t\tborderColor: 'rgba(255, 99, 132,.3)',\n\t\t\t\tdata: [0, 10, 5, 2, 20, 30, 45]\n\t\t\t}\n\t\t],\n\t\tborderWidth: 1\n\t},\n\toptions: {}\n};\n\nlet bar = {\n\ttype: 'bar',\n\tdata: {\n\t\tlabels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: '# of Votes',\n\t\t\t\tdata: [12, 19, 3, 5, 2, 3],\n\t\t\t\tbackgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n\t\t\t\tborderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n\t\t\t\tborderWidth: 1\n\t\t\t}\n\t\t]\n\t},\n\toptions: {}\n};\n\nexport default class CtChartJS extends CtLit {\n\t@property({ type: Object }) chart!: Chart.ChartConfiguration & Chart;\n\t@property({ type: String }) type: Chart.ChartType = pie.type;\n\t@property({ type: Object }) data: Chart.ChartData = pie.data;\n\t@property({ type: Object }) options: Chart.ChartOptions = {};\n\t@property({ type: Number }) delay = 0;\n\t@property({ type: Boolean }) autopaint = false;\n\t@property({ type: Boolean }) autoadjust = false;\n\t@property({ type: Number }) x_ = 400;\n\t@property({ type: Number }) y_ = 400;\n\t@property({ type: Object }) sizeChart = (x: number, y: number) =>\n\t\thtml`\n\t\t\t<style>\n\t\t\t\tcanvas,\n\t\t\t\t.chart-size {\n\t\t\t\t\theight: ${y}px !important;\n\t\t\t\t\twidth: 100% !important;\n\t\t\t\t\tmax-width: ${x}px !important;\n\t\t\t\t\tmin-width: 100px;\n\t\t\t\t}\n\t\t\t</style>\n\t\t`;\n\tctx!: CanvasRenderingContext2D;\n\tresize!: any;\n\n\trender() {\n\t\treturn html`\n\t\t\t<style>\n\t\t\t\t:host {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\tmax-width: 900px;\n\t\t\t\t\tmargin: 0 auto;\n\t\t\t\t}\n\t\t\t\t.chart-size {\n\t\t\t\t\tposition: relative;\n\t\t\t\t\tmargin: 0 auto;\n\t\t\t\t}\n\t\t\t</style>\n\t\t\t${this.sizeChart(this.x_, this.y_)}\n\t\t\t<div class=\"chart-size\">\n\t\t\t\t<canvas id=\"canvas\" height=\"${this.y_}\" width=\"${this.x_}\"></canvas>\n\t\t\t</div>\n\t\t`;\n\t}\n\tconstructor() {\n\t\tsuper();\n\t\tthis.resize = (evt: Event) => {\n\t\t\tif (this.chart) {\n\t\t\t\tthis.chart.resize();\n\t\t\t}\n\t\t};\n\t}\n\n\tasync firstUpdated(_props: Map<PropertyKey, unknown>) {\n\t\tthis.mapIDs();\n\t\tawait sleep(200);\n\t\tif (this.autopaint) {\n\t\t\tthis.init();\n\t\t} else if (this.delay > 0) {\n\t\t\tawait sleep(this.delay);\n\t\t\tthis.init();\n\t\t}\n\t}\n\n\tasync init() {\n\t\tlet data: Chart.ChartData = this.data || {};\n\t\tlet options: Chart.ChartOptions = this.options || {};\n\n\t\tif ((data.labels?.length || 1) > 6 && this.autoadjust) {\n\t\t\tthis.y_ = 500;\n\t\t}\n\t\tif ((data.labels?.length || 1) > 15 && this.autoadjust) {\n\t\t\tconsole.log(options);\n\t\t\tthis.y_ = 600;\n\t\t}\n\t\tthis.offsetWidth == 0 && (await sleep(100));\n\n\t\tthis.chart = new Chart(this.$.canvas, {\n\t\t\ttype: this.type,\n\t\t\tdata: data,\n\t\t\toptions: { ...options, responsive: true, maintainAspectRatio: false }\n\t\t});\n\t\twindow.addEventListener('resize', this.resize);\n\t}\n\n\tpaint() {\n\t\tlet data: Chart.ChartData = this.data || {};\n\t\tlet options: Chart.ChartOptions = this.options || {};\n\t\tif (!this.chart) {\n\t\t\tlet ctx: CanvasRenderingContext2D = this.shadowRoot!.querySelector('canvas')!.getContext('2d')!;\n\t\t\tthis.chart = new Chart(ctx, {\n\t\t\t\ttype: this.type,\n\t\t\t\tdata: data,\n\t\t\t\toptions: options\n\t\t\t});\n\t\t} else {\n\t\t\tthis.chart.type = this.type;\n\t\t\tthis.chart.data = data;\n\t\t\tthis.chart.options = options;\n\t\t\tthis.chart.update();\n\t\t}\n\t\tthis.chart.data = this.observe(this.chart.data);\n\t\tfor (let prop of Object.keys(this.chart.data)) {\n\t\t\t// @ts-ignore\n\t\t\tthis.chart.data[prop] = this.observe(this.chart.data[prop]);\n\t\t}\n\t\t// @ts-ignore\n\t\tthis.chart.data.datasets = this.chart.data.datasets.map((dataset: Chart.ChartDataSets) => {\n\t\t\t// @ts-ignore\n\t\t\tdataset.data = this.observe(dataset.data);\n\t\t\treturn this.observe(dataset);\n\t\t});\n\t\twindow.addEventListener('resize', this.resize);\n\t}\n\n\tdisconnectedCallback() {\n\t\tsuper.disconnectedCallback();\n\t\twindow.removeEventListener('resize', this.resize);\n\t}\n\n\t/**\n\t * Use Proxy to watch object props change\n\t * @params obj\n\t */\n\tpublic observe<T extends object>(obj: T): T {\n\t\tlet updateChart: () => void = this.updateChart;\n\t\treturn new Proxy(obj, {\n\t\t\tset: (target: T, prop: string, val: unknown): boolean => {\n\t\t\t\t// @ts-ignore\n\t\t\t\ttarget[prop] = val;\n\t\t\t\tPromise.resolve().then(updateChart);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t}\n\t/**\n\t * Manually update chart\n\t */\n\tpublic updateChart = (): void => {\n\t\tif (this.chart) {\n\t\t\tthis.chart.update();\n\t\t}\n\t};\n}\n\ncustomElements.define('ct-chartjs', CtChartJS);\n"]}